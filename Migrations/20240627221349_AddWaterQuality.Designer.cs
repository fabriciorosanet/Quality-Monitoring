// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using QualityMonitoring.Data.Contexts;

#nullable disable

namespace QualityMonitoring.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240627221349_AddWaterQuality")]
    partial class AddWaterQuality
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QualityMonitoring.Models.AirQuality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("CO2")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double>("PM10")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double>("PM25")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TIMESTAMP(7)");

                    b.HasKey("Id");

                    b.ToTable("AirQuality");
                });

            modelBuilder.Entity("QualityMonitoring.Models.WaterQuality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("DissolvedOxygen")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double>("PH")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<double>("Turbidity")
                        .HasColumnType("BINARY_DOUBLE");

                    b.HasKey("Id");

                    b.ToTable("WaterQuality");
                });
#pragma warning restore 612, 618
        }
    }
}
